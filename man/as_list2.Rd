% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as_list.R
\name{as_list2}
\alias{as_list2}
\title{Coerce xml nodes to a list with better handling duplicate elements}
\usage{
as_list2(x, ns = character(), ...)
}
\arguments{
\item{x}{A document, node, or node set.}

\item{ns}{Optionally, a named vector giving prefix-url pairs, as produced
by \code{\link[=xml_ns]{xml_ns()}}. If provided, all names will be explicitly
qualified with the ns prefix, i.e. if the element \code{bar} is defined
in namespace \code{foo}, it will be called \code{foo:bar}. (And
similarly for attributes). Default namespaces must be given an explicit
name. The ns is ignored when using \code{\link[=xml_name<-]{xml_name<-()}} and
\code{\link[=xml_set_name]{xml_set_name()}}.}

\item{...}{Needed for compatibility with generic. Unused.}
}
\description{
This turns an XML document (or node or nodeset) into the equivalent R
list. This functions like \code{as_list()} but ensures elements with duplicate
names are put into indexed lists.
}
\examples{
# With duplicate elements
xml <- read_xml("<content><x>a</x><x>b</x></content>")
lst <- as_list(xml)
lst$content$x        # Returns "a" solely
lst2 <- as_list2(xml)
lst2$content$x       # Returns "a" and "b"
lst2$content$x[[1]]  # Returns "a"
lst2$content$x[[2]]  # Returns "b"

# With attributes preserved
xml <- read_xml("<w aa='0'><x a='1' b='2'><y>3</y><z>4</z></x></w>")
as_list2(xml)
}
